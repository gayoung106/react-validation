{"ast":null,"code":"var _jsxFileName = \"/Users/song-gayeong/Gayoung/react-validation/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChagedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== \"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const emailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n\n    // nameInputRef.current.value = \"\";\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), enteredEmailIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"gD1xqyh7L2Yq4TKU8l4gDPR+jUg=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChagedHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailIsInvalid","formIsValid","nameInputChangeHandler","event","setEnteredName","target","emailInputChangeHandler","nameInputBlurHandler","setEnteredNameTouched","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","nameInputIsInvalid","emailInputClasses"],"sources":["/Users/song-gayeong/Gayoung/react-validation/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChagedHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const emailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    // nameInputRef.current.value = \"\";\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your E-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {enteredEmailIsValid && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}